#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
41 #"profj:syntax-colors:scheme:block-comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 34
#"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 33
#"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 14635 0 28 3 17 #"#lang racket/base"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 13 #"drracket/tool"
0 0 24 3 1 #" "
0 0 17 3 77
(
 #";Bug, racket do not find the \"binding\" (paint that red) however it"
 #" is needed)"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"racket/class"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"racket/gui/base"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"racket/unit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 23 #"mrlib/switchable-button"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 9 #"framework"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"syntax/parse"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"racket/pretty"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 39 #"drracket/private/syncheck/syncheck-intf"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"syntax/toplevel"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 36 #"drracket/private/syncheck/traversals"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 12 #"for-template"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 24 3 2 #") "
0 0 17 3 25 #";was a test, did not work"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"syntax/to-string"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"data/interval-map"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 10 #"racket/set"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"racket/dict"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"racket/runtime-path"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"racket/match"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"racket/place"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"racket/list"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"racket/string"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 11 #"racket/file"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"string-constants"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 9 #"framework"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"prefix-in"
0 0 24 3 1 #" "
0 0 14 3 15 #"drracket:arrow:"
0 0 24 3 1 #" "
0 0 14 3 14 #"drracket/arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 9 #"prefix-in"
0 0 24 3 1 #" "
0 0 14 3 3 #"fw:"
0 0 24 3 1 #" "
0 0 14 3 19 #"framework/framework"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 14 #";racket/string"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 17 #"\"online-comp.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 46 #"\"languageRefactorings/racket-refactorings.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 46 #"\"languageRefactorings/python-refactorings.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 50 #"\"languageRefactorings/processing-refactorings.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 40 #"\"languageRefactorings/meta-language.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 49 #"\"languageRefactorings/python-pretty-pritting.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 53 #"\"languageRefactorings/processing-pretty-pritting.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 19 3 17 #"\"code-walker.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 5 #"tool@"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"expanded-program"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"tool@"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"unit"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"import"
0 0 24 3 1 #" "
0 0 14 3 14 #"drracket:tool^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"export"
0 0 24 3 1 #" "
0 0 14 3 22 #"drracket:tool-exports^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 22 #"refactoring-tool-mixin"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 5 #"mixin"
0 0 24 3 2 #" ("
0 0 14 3 22 #"drracket:unit:frame<%>"
0 0 24 3 4 #") ()"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"super-new"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 7 #"inherit"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-button-panel"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 20 #"get-definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 15 #"get-current-tab"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 21 #"get-interactions-text"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"get-editor%"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 50 #";dc-location-to-editor-location ;;added check this"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 34 #";last-position ;;;added check this"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-editor%"
0 0 24 3 2 #") "
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg1"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 7 #"inherit"
0 0 24 3 1 #" "
0 0 14 3 23 #"register-toolbar-button"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 25 #"set-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"box?"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 4 #"box?"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"button"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 33 #";; this shouldn't happen, I think"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"box?"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#t"
0 0 24 3 3 #"])]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"button"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"box?"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 25 #"set-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"unknown new mode ~s\\n\""
0 0 24 3 1 #" "
0 0 14 3 4 #"mode"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 49 #";;;;;;;;;;;;;;;;;;;;;;;;;; Arrow Structure  ;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 4 #" () "
0 0 23 3 9 #"#:mutable"
0 0 24 3 1 #" "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 9 #"var-arrow"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-px"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-py"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-px"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-py"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 7 #"actual?"
0 0 24 3 1 #" "
0 0 14 3 5 #"level"
0 0 24 3 1 #" "
0 0 14 3 14 #"require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 48 #";; level is one of 'lexical, 'top-level, 'import"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define-struct"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tail-arrow"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #") ("
0 0 14 3 9 #"from-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"to-text"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 2 #") "
0 0 23 3 13 #"#:transparent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 53 #";; arrow-records : (U #f hash[text% => arrow-record])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 52 #";; arrow-record = interval-map[(listof arrow-entry)]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 24 #";; arrow-entry is one of"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 39 #";;   - (cons (U #f sym) (menu -> void))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 15 #";;   - def-link"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 16 #";;   - tail-link"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 12 #";;   - arrow"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 13 #";;   - string"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 21 #";;   - colored-region"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-arrow-record"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 7 #"object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 16 #"get-arrow-record"
0 0 24 3 1 #" "
0 0 19 3 48 #"\"expected a text as the second argument, got ~e\""
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"hash-ref!"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 17 #"make-interval-map"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 19 #"fetch-arrow-records"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"im"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 2 #"im"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 16 #"interval-map-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"im"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 18 #"dump-arrow-records"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"inside dump-arrow-records\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"for"
0 0 24 3 4 #" ([("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 7 #"in-hash"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"\\n\\n~s:\\n\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 2 #"it"
0 0 24 3 2 #" ("
0 0 14 3 26 #"interval-map-iterate-first"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"~s =>\\n\""
0 0 24 3 2 #" ("
0 0 14 3 24 #"interval-map-iterate-key"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 2 #" ("
0 0 14 3 26 #"interval-map-iterate-value"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"  ~s\\n\""
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 25 #"interval-map-iterate-next"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 2 #"it"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"arrow-records empty\\n\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 42 #";; cleanup-texts : (or/c #f (listof text))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"cleanup-texts"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 85
(
 #";; definition-targets : hash-table[(list symbol[id-name] (listof sym"
 #"bol[submodname]))"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 65
#";;                                 -o> (list text number number)]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 18 #"definition-targets"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 56 #";; bindings-table : hash-table[(list text number number)"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 69
(
 #";;                             -o> (setof (list text number number))"
 #"]"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 26 #";; this is a private field"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"bindings-table"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 75
(
 #";; add-to-bindings-table : text number number text number number -> "
 #"boolean"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 79
(
 #";; results indicates if the binding was added to the table. It is ad"
 #"ded, unless"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 30 #";;  1) it is already there, or"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 29 #";;  2) it is a link to itself"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 21 #"add-to-bindings-table"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-left"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-right"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"end-right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"object=?"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 10 #"start-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 11 #"start-right"
0 0 24 3 1 #" "
0 0 14 3 9 #"end-right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-left"
0 0 24 3 1 #" "
0 0 14 3 11 #"start-right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"priors"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 14 #"bindings-table"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 5 #" () ("
0 0 14 3 3 #"set"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"end-right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 11 #"set-member?"
0 0 24 3 1 #" "
0 0 14 3 6 #"priors"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 14 #"bindings-table"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 1 #" "
0 0 14 3 6 #"priors"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#t"
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 84
(
 #";; compare-bindings : (list text number number) (list text number nu"
 #"mber) -> boolean"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 73
(
 #";; compares two bindings in the sets inside the bindings table, retu"
 #"rning"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 53 #";; #t if l1 appears earlier in the file than l2 does."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 25 #"syncheck:compare-bindings"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 59
#";; find-dc-location : text number -> (values number number)"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-dc-location"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 30 #"editor-location-to-dc-location"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 10 #"start-text"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 10 #"start-left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 8 #"end-text"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 8 #"end-left"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 8 #"object=?"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-left"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-left"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 2 #"sx"
0 0 24 3 1 #" "
0 0 14 3 2 #"sy"
0 0 24 3 3 #") ("
0 0 14 3 16 #"find-dc-location"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-left"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                            [("
0 0 14 3 2 #"ex"
0 0 24 3 1 #" "
0 0 14 3 2 #"ey"
0 0 24 3 3 #") ("
0 0 14 3 16 #"find-dc-location"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-left"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"sy"
0 0 24 3 1 #" "
0 0 14 3 2 #"ey"
0 0 24 3 3 #") ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 2 #"sx"
0 0 24 3 1 #" "
0 0 14 3 2 #"ex"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 2 #"sy"
0 0 24 3 1 #" "
0 0 14 3 2 #"ey"
0 0 24 3 8 #")]))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"tacked-hash-table"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-hasheq"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 77
(
 #";; find-char-box : text number number -> (values number number numbe"
 #"r number)"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 74
(
 #";; returns the bounding box (left, top, right, bottom) for the text "
 #"range."
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 52 #";; only works right if the text is on a single line."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 13 #"find-char-box"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"left-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"right-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 8 #"left-pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 1 #" "
0 0 14 3 3 #"ylb"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"right-pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 1 #" "
0 0 14 3 3 #"yrb"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 6 #"xl-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yl-off"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 30 #"editor-location-to-dc-location"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"ylb"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"xl"
0 0 24 3 1 #" "
0 0 14 3 2 #"yl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 6 #"xl-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yl-off"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 6 #"xr-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yr-off"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 30 #"editor-location-to-dc-location"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"yrb"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 2 #"xr"
0 0 24 3 1 #" "
0 0 14 3 2 #"yr"
0 0 24 3 3 #") ("
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 6 #"xr-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yr-off"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"values"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 2 #"xl"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 2 #"yl"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 2 #"xr"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 2 #"yr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 14 #"get-arrow-poss"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"var-arrow?"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #") ("
0 0 14 3 18 #"get-var-arrow-poss"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 11 #"tail-arrow?"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #") ("
0 0 14 3 19 #"get-tail-arrow-poss"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-var-arrow-poss"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 7 #"start-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-y"
0 0 24 3 3 #") ("
0 0 14 3 9 #"find-poss"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 18 #"var-arrow-start-px"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 18 #"var-arrow-start-py"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 5 #"end-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-y"
0 0 24 3 3 #") ("
0 0 14 3 9 #"find-poss"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 18 #"var-arrow-end-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 22 #"var-arrow-end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 23 #"var-arrow-end-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 16 #"var-arrow-end-px"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 16 #"var-arrow-end-py"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 19 #"get-tail-arrow-poss"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 51 #";; If the item is an embedded editor snip, redirect"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 54 #";; the arrow to point at the left edge rather than the"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";; midpoint."
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"find-poss/embedded"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 4 #"snip"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-snip"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"after"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 4 #"snip"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 4 #"snip"
0 0 24 3 1 #" "
0 0 14 3 12 #"editor-snip%"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"get-snip-position"
0 0 24 3 1 #" "
0 0 14 3 4 #"snip"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"find-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"find-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 2 #".5"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 7 #"start-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-y"
0 0 24 3 3 #") ("
0 0 14 3 18 #"find-poss/embedded"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 20 #"tail-arrow-from-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 19 #"tail-arrow-from-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 5 #"end-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-y"
0 0 24 3 3 #") ("
0 0 14 3 18 #"find-poss/embedded"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 18 #"tail-arrow-to-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 17 #"tail-arrow-to-pos"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"start-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"end-y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ylb"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"yrb"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 9 #"find-poss"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"left-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"right-pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"px"
0 0 24 3 1 #" "
0 0 14 3 2 #"py"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 8 #"left-pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 1 #" "
0 0 14 3 3 #"ylb"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"right-pos"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 1 #" "
0 0 14 3 3 #"yrb"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 11 #"let*-values"
0 0 24 3 4 #" ([("
0 0 14 3 6 #"xl-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yl-off"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 30 #"editor-location-to-dc-location"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xlb"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"ylb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"xl"
0 0 24 3 1 #" "
0 0 14 3 2 #"yl"
0 0 24 3 3 #") ("
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 6 #"xl-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yl-off"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 6 #"xr-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yr-off"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 30 #"editor-location-to-dc-location"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                               ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"xrb"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 3 #"yrb"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"xr"
0 0 24 3 1 #" "
0 0 14 3 2 #"yr"
0 0 24 3 3 #") ("
0 0 14 3 30 #"dc-location-to-editor-location"
0 0 24 3 1 #" "
0 0 14 3 6 #"xr-off"
0 0 24 3 1 #" "
0 0 14 3 6 #"yr-off"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"xl"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"xr"
0 0 24 3 1 #" "
0 0 14 3 2 #"xl"
0 0 24 3 2 #") "
0 0 14 3 2 #"px"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"yl"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 2 #"yr"
0 0 24 3 1 #" "
0 0 14 3 2 #"yl"
0 0 24 3 2 #") "
0 0 14 3 2 #"py"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 33 #";; syncheck:init-arrows : -> void"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 20 #"syncheck:init-arrows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"tacked-hash-table"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-hasheq"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-hasheq"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 14 #"bindings-table"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"cleanup-texts"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 15 3 18 #"definition-targets"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 24 #"syncheck:arrows-visible?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 1 #" "
0 0 14 3 10 #"cursor-pos"
0 0 24 3 1 #" "
0 0 14 3 11 #"cursor-text"
0 0 24 3 1 #" "
0 0 14 3 11 #"cursor-eles"
0 0 24 3 1 #" "
0 0 14 3 14 #"cursor-tooltip"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 34 #";; syncheck:clear-arrows : -> void"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 21 #"syncheck:clear-arrows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 24 #"syncheck:arrows-visible?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"tacked-hash-table"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 20 #"update-latent-arrows"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 19 #"update-drawn-arrows"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 23 #"syncheck:clear-coloring"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 31 #"invalidate-bitmap-cache/padding"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 23 #"syncheck:clear-coloring"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 13 #"cleanup-texts"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"for-each"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 12 #"thaw-colorer"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 13 #"cleanup-texts"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 13 #"cleanup-texts"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 29 #"syncheck:add-background-color"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"fin"
0 0 24 3 1 #" "
0 0 14 3 9 #"raw-color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 37 #"\"add-backgroud-color not implemented\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"text:basic<%>"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 61
#";; we adjust the colors over here based on the white-on-black"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 60
#";; preference so we don't have to have the preference set up"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 63
#";; in the other place when running check syntax in online mode."
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 15 #"preferences:get"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 25 #"framework:white-on-black?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 9 #"raw-color"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"palegreen\""
0 0 24 3 2 #") "
0 0 19 3 11 #"\"darkgreen\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 9 #"raw-color"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 9 #"raw-color"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"fin"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 19 #"make-colored-region"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"fin"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 64
#";; add-to-range/key : text number number any any boolean -> void"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 56 #";; adds `key' to the range `start' - `end' in the editor"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 65
#";; If use-key? is #t, it adds `to-add' with the key, and does not"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 47 #";; replace a value with that key already there."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 53 #";; If use-key? is #f, it adds `to-add' without a key."
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 31 #";; pre: arrow-records is not #f"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 7 #"pre-end"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-add"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 8 #"use-key?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 7 #"pre-end"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 7 #"pre-end"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"arrow-record"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-arrow-record"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 55 #";; Dropped the check (< _ (vector-length arrow-vector))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 35 #";; which had the following comment:"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 67
#";;    the last test in the above and is because some syntax objects"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 76
(
 #";;    appear to be from the original source, but can have bogus info"
 #"rmation."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 75
(
 #";; interval-maps use half-open intervals which works out well for po"
 #"sitions"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 75
(
 #";; in the editor, since the interval [0,3) covers the characters jus"
 #"t after"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 76
(
 #";; positions 0, 1, and 2, but not the character at position 3 (posit"
 #"ions are"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 22 #";; between characters)"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 3 2 #" ["
0 0 14 3 8 #"use-key?"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 21 #"interval-map-update*!"
0 0 24 3 1 #" "
0 0 14 3 12 #"arrow-record"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"old"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 15 3 6 #"for/or"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 3 #"key"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 48 #"                                                "
0 0 14 3 3 #"old"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-add"
0 0 24 3 2 #") "
0 0 14 3 3 #"old"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 4 #"null"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 19 #"interval-map-cons*!"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 12 #"arrow-record"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-add"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 71
(
 #";; pre: start-editor, end-editor are embedded in `this' (or are `thi"
 #"s')"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 32 #"syncheck:add-arrow/name-dup/pxpy"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 8 #"start-px"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-py"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 8 #"end-text"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 6 #"end-px"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-py"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 14 3 7 #"actual?"
0 0 24 3 1 #" "
0 0 14 3 5 #"level"
0 0 24 3 1 #" "
0 0 14 3 14 #"require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"preferences:get"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 30 #"drracket:syncheck:show-arrows?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 21 #"add-to-bindings-table"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"arrow"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-var-arrow"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 8 #"start-px"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-py"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 6 #"end-px"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-py"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 7 #"actual?"
0 0 24 3 1 #" "
0 0 14 3 5 #"level"
0 0 24 3 1 #" "
0 0 14 3 14 #"require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-text"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 60
#";; syncheck:add-tail-arrow : text number text number -> void"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 23 #"syncheck:add-tail-arrow"
0 0 24 3 1 #" "
0 0 14 3 9 #"from-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"to-text"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"preferences:get"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 30 #"drracket:syncheck:show-arrows?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 10 #"tail-arrow"
0 0 24 3 2 #" ("
0 0 14 3 15 #"make-tail-arrow"
0 0 24 3 1 #" "
0 0 14 3 7 #"to-text"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 1 #" "
0 0 14 3 9 #"from-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 9 #"from-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 10 #"tail-arrow"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 7 #"to-text"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 10 #"tail-arrow"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 71
(
 #";; syncheck:add-jump-to-definition : text start end id filename -> v"
 #"oid"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 31 #"syncheck:add-jump-to-definition"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 7 #"submods"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 40 #"\"add-jump-to-definition not implemented\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-def-link"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 7 #"submods"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 74
(
 #";; syncheck:add-mouse-over-status : text pos-left pos-right string -"
 #"> void"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 30 #"syncheck:add-mouse-over-status"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"add-mouse-over-status not implemented\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 13 #"arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 16 #"add-to-range/key"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-right"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 17 #"make-tooltip-info"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 50 #";;;;;;;;;;;;;;;;;;;;;;;;;; Arrow Information ;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define/public"
0 0 24 3 2 #" ("
0 0 14 3 29 #"replay-compile-comp-trace-aux"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 2 #") "
0 0 17 3 43 #";;;it is not calling this function fix this"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 30 #"\"in replay-compile-comp-trace\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 21 #"add-bkg-running-color"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 14 3 8 #"syncheck"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orchid\""
0 0 24 3 1 #" "
0 0 14 3 19 #"cs-syncheck-running"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-hasheq"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 10 #"start-time"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-val"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-val"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-time"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 26 #"syncheck:update-blue-boxes"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 8 #"get-ints"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 28 #"syncheck:update-drawn-arrows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 24 #"remove-bkg-running-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"syncheck"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 25 #"set-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 66
#";; if we've been asked to stop (because some new results are ready"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 33 #";; and another trace is running)."
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"void"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")  "
0 0 17 3 49 #";; check i just in case things are really strange"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 2 #") "
0 0 14 3 10 #"start-time"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 2 #"bx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 28 #"current-inexact-milliseconds"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 21 #"process-trace-element"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 14 3 10 #"start-time"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 6 #"))])))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 21 #"process-trace-element"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"in process-trace-element\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 75
(
 #";; using 'defs-text' all the time is wrong in the case of embedded e"
 #"ditors,"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 82
(
 #";; but they already don't work and we've arranged for them to not ap"
 #"pear here ...."
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"pretty-print"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 32 #"syncheck:add-arrow/name-dup/pxpy"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 15 #"start-pos-right"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"start-px"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"start-py"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 13 #"end-pos-right"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"end-px"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"end-py"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 14 3 7 #"actual?"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"level"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 14 #"require-arrow?"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"name-dup-id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"build-name-dup?"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-id"
0 0 24 3 2 #"  "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 32 #"syncheck:add-arrow/name-dup/pxpy"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-px"
0 0 24 3 1 #" "
0 0 14 3 8 #"start-py"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-pos-right"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-px"
0 0 24 3 1 #" "
0 0 14 3 6 #"end-py"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 7 #"actual?"
0 0 24 3 1 #" "
0 0 14 3 5 #"level"
0 0 24 3 1 #" "
0 0 14 3 14 #"require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 23 #"syncheck:add-tail-arrow"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"from-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"to-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 23 #"syncheck:add-tail-arrow"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"from-pos"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 6 #"to-pos"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 30 #"syncheck:add-mouse-over-status"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"pos-left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"pos-right"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 30 #"syncheck:add-mouse-over-status"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 8 #"pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"pos-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 29 #"syncheck:add-background-color"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"fin"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 29 #"syncheck:add-background-color"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"fin"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 31 #"syncheck:add-jump-to-definition"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"submods"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 31 #"syncheck:add-jump-to-definition"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 8 #"filename"
0 0 24 3 1 #" "
0 0 14 3 7 #"submods"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 30 #"syncheck:add-require-open-menu"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"file"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"require-open-menu\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 30 #"syncheck:add-require-open-menu"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"file"
0 0 24 3 3 #")] "
0 0 17 3 34 #";;got an error, might be useful..."
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 22 #"syncheck:add-docs-menu"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"the-label"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 15 3 14 #"definition-tag"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tag"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"add-docs-menu\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 22 #"syncheck:add-docs-menu"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 9 #"the-label"
0 0 24 3 1 #" "
0 0 14 3 4 #"path"
0 0 24 3 1 #" "
0 0 15 3 14 #"definition-tag"
0 0 24 3 1 #" "
0 0 14 3 3 #"tag"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 30 #"syncheck:add-definition-target"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"mods"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"add-definition-target\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 30 #"syncheck:add-definition-target"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"mods"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"#("
0 0 14 3 19 #"syncheck:add-id-set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 18 #"to-be-renamed/poss"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"name-dup-id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 24 #"to-be-renamed/poss/fixed"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 8 #"for/list"
0 0 24 3 3 #" (["
0 0 14 3 3 #"lst"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 18 #"to-be-renamed/poss"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 2 #" ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 8 #"list-ref"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"build-name-dup?"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-id"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 19 #"syncheck:add-id-set"
0 0 24 3 1 #" "
0 0 14 3 24 #"to-be-renamed/poss/fixed"
0 0 24 3 1 #" "
0 0 14 3 9 #"name-dup?"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 15 #"build-name-dup?"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-id"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 24 #";; just give up here ..."
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 17 #"place-channel-put"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-id"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sync/timeout"
0 0 24 3 1 #" "
0 0 21 3 2 #".5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"handle-evt"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 25 #"known-dead-place-channels"
0 0 24 3 1 #" "
0 0 14 3 11 #"name-dup-pc"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#f"
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #" ("
0 0 14 3 18 #"current-eventspace"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 16 #"old-break-thread"
0 0 24 3 1 #" "
0 0 14 3 13 #"old-custodian"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 14 #"get-breakables"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 23 #";; set by the init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"expanded-expression"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"expansion-completed"
0 0 24 3 1 #" "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"show-error-report/tab"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"cleanup"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 14 #"set-breakables"
0 0 24 3 1 #" "
0 0 14 3 16 #"old-break-thread"
0 0 24 3 1 #" "
0 0 14 3 13 #"old-custodian"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 17 #"enable-evaluation"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 25 #"set-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 17 #"close-status-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 59
#";; do this with some lag ... not great, but should be okay."
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"err-port"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 21 #"get-error-report-text"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-err-port"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 6 #"thread"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 12 #"flush-output"
0 0 24 3 1 #" "
0 0 14 3 8 #"err-port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 21 #"get-error-report-text"
0 0 24 3 2 #") "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 21 #"show-error-report/tab"
0 0 24 3 9 #")))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"kill-termination"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 27 #"syncheck:clear-highlighting"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 7 #"cleanup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 23 #"error-display-semaphore"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-semaphore"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 25 #"uncaught-exception-raised"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 9 #";; =user="
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 9 #";;  =drs="
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"yield"
0 0 24 3 1 #" "
0 0 14 3 23 #"error-display-semaphore"
0 0 24 3 2 #") "
0 0 17 3 29 #";; let error display go first"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 27 #"syncheck:clear-highlighting"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 7 #"cleanup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"error-port"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 21 #"get-error-report-text"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-err-port"
0 0 24 3 3 #")) "
0 0 17 3 47 #";;cant find get-error-report-text in racket doc"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"output-port"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 21 #"get-error-report-text"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-out-port"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 51 #";; with-lock/edit-sequence : text (-> void) -> void"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 55 #";; sets and restores some state of the definitions text"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 50 #";; so that edits to the definitions text work out."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 4 #"thnk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 7 #"locked?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 10 #"is-locked?"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 4 #"lock"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"thnk"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 4 #"lock"
0 0 24 3 1 #" "
0 0 14 3 7 #"locked?"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 21 #"definitions-text-copy"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 11 #"text:basic%"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 45 #";; overriding get-port-name like this ensures"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 50 #";; that the resulting syntax objects are connected"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 17 3 48 #";; to the actual definitions-text, not this copy"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 15 #"define/override"
0 0 24 3 2 #" ("
0 0 14 3 13 #"get-port-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"get-port-name"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"super-new"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 8 #"; =user="
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-tab"
0 0 24 3 1 #" "
0 0 14 3 14 #"set-breakables"
0 0 24 3 2 #" ("
0 0 14 3 14 #"current-thread"
0 0 24 3 3 #") ("
0 0 14 3 17 #"current-custodian"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 13 #"set-directory"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 3 #")  "
0 0 17 3 19 #";Is this important?"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 31 #"current-load-relative-directory"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"current-error-port"
0 0 24 3 1 #" "
0 0 14 3 10 #"error-port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 19 #"current-output-port"
0 0 24 3 1 #" "
0 0 14 3 11 #"output-port"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 21 #"error-display-handler"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"msg"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 2 #") "
0 0 17 3 9 #";; =user="
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 8 #";; =drs="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 49 #";; this has to come first or else the positioning"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 50 #";; computations in the highlight-errors/exn method"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 52 #";; will be wrong by the size of the error report box"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 21 #"show-error-report/tab"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 39 #";; a call like this one also happens in"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 50 #";; drracket:debug:error-display-handler/stacktrace"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 43 #";; but that call won't happen here, because"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 46 #";; the rep is not in the current-rep parameter"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 17 #"interactions-text"
0 0 24 3 1 #" "
0 0 14 3 20 #"highlight-errors/exn"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 47 #"drracket:debug:error-display-handler/stacktrace"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 3 #"msg"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 3 #"exn"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 23 3 18 #"#:definitions-text"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 14 #"semaphore-post"
0 0 24 3 1 #" "
0 0 14 3 23 #"error-display-semaphore"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 27 #"error-print-source-location"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 42 #"; need to build code to render error first"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 26 #"uncaught-exception-handler"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"oh"
0 0 24 3 2 #" ("
0 0 14 3 26 #"uncaught-exception-handler"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"exn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 25 #"uncaught-exception-raised"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"oh"
0 0 24 3 1 #" "
0 0 14 3 3 #"exn"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"update-status-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 1 #" "
0 0 14 3 27 #"status-expanding-expression"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"set!-values"
0 0 24 3 2 #" ("
0 0 14 3 19 #"expanded-expression"
0 0 24 3 1 #" "
0 0 14 3 19 #"expansion-completed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"make-traversal"
0 0 24 3 2 #" ("
0 0 14 3 17 #"current-namespace"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 17 #"current-directory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 21 3 2 #"#f"
0 0 24 3 3 #")) "
0 0 17 3 72
(
 #";; set by set-directory above #:print-extra-info? [print-extra-info?"
 #" #f]"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #" ("
0 0 14 3 17 #"current-custodian"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"settings"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 1 #" "
0 0 14 3 17 #"get-next-settings"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"module-language?"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"is-a?"
0 0 24 3 2 #" ("
0 0 14 3 58
#"drracket:language-configuration:language-settings-language"
0 0 24 3 1 #" "
0 0 14 3 8 #"settings"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 43 #"drracket:module-language:module-language<%>"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 45 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 29 #"current-syncheck-running-mode"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 42 #";;;;;aux functions to rename menu callback"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 38 #";; position->matching-identifiers-hash"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 80
(
 #";; : txt pos pos -> (values (listof var-arrow?) hash[(list txt pos p"
 #"os) -o> #t])"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 35 #"position->matching-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"the-start-pos"
0 0 24 3 1 #" "
0 0 14 3 11 #"the-end-pos"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                             "
0 0 14 3 23 #"include-require-arrows?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"binding-arrows"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"add-binding-arrow"
0 0 24 3 1 #" "
0 0 14 3 3 #"arr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 23 #"include-require-arrows?"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 3 #"arr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 14 #"binding-arrows"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"arr"
0 0 24 3 1 #" "
0 0 14 3 14 #"binding-arrows"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 11 #"the-end-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 7 #"the-pos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 14 3 13 #"the-start-pos"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 11 #"the-end-pos"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"arrs"
0 0 24 3 2 #" ("
0 0 14 3 19 #"fetch-arrow-records"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"the-pos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 4 #"arrs"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 5 #"arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 4 #"arrs"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 10 #"var-arrow?"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 2 #") "
0 0 14 3 8 #"the-text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 7 #"the-pos"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 17 3 34 #";; a binding occurrence => keep it"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 17 #"add-binding-arrow"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 17 3 37 #";; a bound occurrence => find binders"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 16 #"candidate-binder"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 7 #"in-list"
0 0 24 3 2 #" ("
0 0 14 3 19 #"fetch-arrow-records"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 63
#"                                                              ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 10 #"var-arrow?"
0 0 24 3 1 #" "
0 0 14 3 16 #"candidate-binder"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 16 #"candidate-binder"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 16 #"candidate-binder"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 16 #"candidate-binder"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 17 #"add-binding-arrow"
0 0 24 3 1 #" "
0 0 14 3 16 #"candidate-binder"
0 0 24 3 11 #"))))]))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"identifiers-hash"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"add-one"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"identifiers-hash"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-identifiers-hash"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 16 #"identifiers-hash"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"identifiers-hash"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"already-considered"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 13 #"binding-arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 14 #"binding-arrows"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"add-one"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"range-to-consider"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 18 #"already-considered"
0 0 24 3 1 #" "
0 0 14 3 17 #"range-to-consider"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"already-considered"
0 0 24 3 1 #" "
0 0 14 3 17 #"range-to-consider"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 3 #"pos"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 17 #"range-to-consider"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 17 #"range-to-consider"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 5 #"arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 2 #" ("
0 0 14 3 19 #"fetch-arrow-records"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 3 #"pos"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 10 #"var-arrow?"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 23 #"include-require-arrows?"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-require-arrow?"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 13 #"binding-arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"add-one"
0 0 24 3 2 #" ("
0 0 14 3 18 #"var-arrow-end-text"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 22 #"var-arrow-end-pos-left"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 23 #"var-arrow-end-pos-right"
0 0 24 3 1 #" "
0 0 14 3 5 #"arrow"
0 0 24 3 10 #"))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 16 #"identifiers-hash"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 11 #"the-end-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 14 #"binding-arrows"
0 0 24 3 1 #" "
0 0 14 3 20 #"get-identifiers-hash"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 82
(
 #";; sort-and-merge : (listof (cons number number)) -> (listof (cons n"
 #"umber number))"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 57 #";; the result is guaranteed to be non-overlapping ranges,"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 34 #";; sorted from smallest to largest"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"sort-and-merge"
0 0 24 3 1 #" "
0 0 14 3 10 #"start+ends"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"sorted-positions"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 10 #"start+ends"
0 0 24 3 1 #" "
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 14 3 3 #"car"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 9 #"positions"
0 0 24 3 1 #" "
0 0 14 3 16 #"sorted-positions"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 3 #")) "
0 0 14 3 9 #"positions"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"fst"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"snd"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cadr"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 [("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"fst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"snd"
0 0 24 3 3 #")) "
0 0 17 3 13 #";; no overlap"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"fst"
0 0 24 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"merged"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"fst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"max"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"fst"
0 0 24 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"snd"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 6 #"merged"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cddr"
0 0 24 3 1 #" "
0 0 14 3 9 #"positions"
0 0 24 3 9 #")))])])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 65
#";; find-name-to-offer : (non-empty-listof identifier?) -> string?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 18 #"find-name-to-offer"
0 0 24 3 1 #" "
0 0 14 3 18 #"binding-var-arrows"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"longest-var-arrow"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 3 #"car"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"sort"
0 0 24 3 1 #" "
0 0 14 3 18 #"binding-var-arrows"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 1 #">"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 23 3 5 #"#:key"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 20 #"var-arrow-start-text"
0 0 24 3 1 #" "
0 0 14 3 17 #"longest-var-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 8 #"get-text"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 17 #"longest-var-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 17 #"longest-var-arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 82
(
 #";; find-parent : menu-item-container<%> -> (union #f (is-a?/c top-le"
 #"vel-window<%>)"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 16 #"find-menu-parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 9 #"menu-bar%"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 9 #"get-frame"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 11 #"popup-menu%"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"target"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-popup-target"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 6 #"target"
0 0 24 3 1 #" "
0 0 14 3 9 #"editor<%>"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"canvas"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"target"
0 0 24 3 1 #" "
0 0 14 3 10 #"get-canvas"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 3 #"and"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"canvas"
0 0 24 3 1 #" "
0 0 14 3 20 #"get-top-level-window"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 6 #"target"
0 0 24 3 1 #" "
0 0 14 3 9 #"window<%>"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"target"
0 0 24 3 1 #" "
0 0 14 3 20 #"get-top-level-window"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"]))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 12 #"menu-item<%>"
0 0 24 3 3 #") ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 10 #"get-parent"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 31 #";;;;;;;;;;;Rename Menu callback"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"rename-menu-callback"
0 0 24 3 1 #" "
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 13 #"name-to-offer"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"for/or"
0 0 24 3 3 #" (["
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 19 #"var-arrow-name-dup?"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 38 #"fw:keymap:call/text-keymap-initializer"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 18 #"get-text-from-user"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 12 #"cs-rename-id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 16 #"cs-rename-var-to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 14 3 13 #"name-to-offer"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 13 #"name-to-offer"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"dup-name?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 10 #";;;changes"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"imported?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 14 #";;; end change"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"do-renaming?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"dup-name?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"equal?"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 18 #"message-box/custom"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 12 #"check-syntax"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 25 #"cs-name-duplication-error"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 7 #"new-sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 16 #"cs-rename-anyway"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 6 #"cancel"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 15 3 9 #"default=2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 12 #"do-renaming?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 12 #";;;; CHANGES"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"normal-rename"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"for"
0 0 24 3 4 #" ([("
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 10 #"start+ends"
0 0 24 3 3 #") ("
0 0 14 3 7 #"in-hash"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 5 #"is-a?"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 5 #"text%"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"merged-positions"
0 0 24 3 2 #" ("
0 0 14 3 14 #"sort-and-merge"
0 0 24 3 1 #" "
0 0 14 3 10 #"start+ends"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 9 #"start+end"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 24 3 1 #" "
0 0 14 3 16 #"merged-positions"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"start+end"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"start+end"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 10 #"source-txt"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"for"
0 0 24 3 4 #" ([("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 3 #") ("
0 0 14 3 7 #"in-hash"
0 0 24 3 2 #" ("
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 24 3 3 #") ("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 6 #"values"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-pos"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"normal-rename"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 27 #";;;; Wide Scope Replacement"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 22 #"wide-scope-replacement"
0 0 24 3 1 #" "
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 11 #"binding-aux"
0 0 24 3 1 #" "
0 0 23 3 9 #"#:python?"
0 0 24 3 2 #" ["
0 0 14 3 7 #"python?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"wideScopeDetected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 10 #"callmethod"
0 0 24 3 1 #" "
0 0 14 3 10 #"bodymethod"
0 0 24 3 3 #") ("
0 0 14 3 16 #"extract-function"
0 0 24 3 1 #" "
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 11 #"binding-aux"
0 0 24 3 1 #" "
0 0 23 3 9 #"#:python?"
0 0 24 3 1 #" "
0 0 14 3 7 #"python?"
0 0 24 3 1 #" "
0 0 23 3 13 #"#:wide-scope?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"callmethod"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 23 3 20 #"#:check-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 23 3 13 #"#:call-method"
0 0 24 3 1 #" "
0 0 14 3 10 #"callmethod"
0 0 24 3 1 #" "
0 0 23 3 13 #"#:body-method"
0 0 24 3 1 #" "
0 0 14 3 10 #"bodymethod"
0 0 24 3 1 #" "
0 0 23 3 8 #"#:parent"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 21 #";;;; Extract function"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 45 #";; callback for the Added-menu Extract Method"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 14 #"define/private"
0 0 24 3 2 #" ("
0 0 14 3 16 #"extract-function"
0 0 24 3 1 #" "
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 11 #"binding-aux"
0 0 24 3 1 #" "
0 0 23 3 9 #"#:python?"
0 0 24 3 2 #" ["
0 0 14 3 7 #"python?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 23 3 13 #"#:wide-scope?"
0 0 24 3 2 #" ["
0 0 14 3 10 #"wide-scope"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"for/or"
0 0 24 3 3 #" (["
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 14 3 19 #"var-arrow-name-dup?"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 38 #"fw:keymap:call/text-keymap-initializer"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 18 #"get-text-from-user"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Extract Function\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"Name of the new function\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"name\""
0 0 24 3 2 #") "
0 0 17 3 24 #";check if name colides??"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"~s\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"dup-name?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"name-dup?"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-sym"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 36 #";;check the name of the new function"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"do-extraction?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"dup-name?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"equal?"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 18 #"message-box/custom"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 12 #"check-syntax"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 25 #"cs-name-duplication-error"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 7 #"new-sym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 16 #"cs-rename-anyway"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 6 #"cancel"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 15 3 9 #"default=2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 16 #";;actual extract"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 14 #"do-extraction?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"per-txt-positions"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"create-call-method"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"python?"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"( \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-append*"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-between"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-args"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\",\""
0 0 24 3 3 #")) "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-args"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"check-arrow"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"get-start-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-end-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 61
#";;find-line uses location, not position. must convert before!"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 7 #";Trying"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 39 #";;;if from #lang racket or form require"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 39 #";;; transform from position to location"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-lang"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 46 #";;first syntatic object (might be good enough)"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-syntax-value"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 14 3 6 #"racket"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-syntax-value"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 14 3 18 #"python/lang/python"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-imports"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 10 #"check-lang"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #") ("
0 0 14 3 13 #"check-imports"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"args-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"travel-args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 11 #"binding-aux"
0 0 24 3 4 #")]) "
0 0 17 3 27 #";check if the arrow counts,"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 15 #"var-arrow-level"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #") "
0 0 14 3 13 #"end-selection"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 11 #"check-arrow"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #")) "
0 0 17 3 20 #"; check if add args."
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"get-text value: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-text"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #") ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 8 #"args-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 1 #" "
0 0 14 3 8 #"args-pos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            )"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"no args\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 17 3 24 #";(display \"Arrow fail \")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 17 3 23 #";(displayln var-arrow))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                            )))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"travel-args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 9 #"var-arrow"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 8 #"args-pos"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-text"
0 0 24 3 2 #" ("
0 0 14 3 24 #"var-arrow-start-pos-left"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 3 #") ("
0 0 14 3 25 #"var-arrow-start-pos-right"
0 0 24 3 1 #" "
0 0 14 3 9 #"var-arrow"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-join"
0 0 24 3 2 #" ("
0 0 14 3 17 #"remove-duplicates"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 5 #")))) "
0 0 17 3 18 #";remove duplicates"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 23 #"string-normalize-spaces"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"args \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"create-method"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-body"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"\\n(define (\""
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 1 #"("
0 0 14 3 8 #"get-args"
0 0 24 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"\\n  \""
0 0 24 3 1 #" "
0 0 14 3 11 #"method-body"
0 0 24 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-method-python"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-body"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"\\ndef \""
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"( \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"string-append*"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"add-between"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-split"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-args"
0 0 24 3 3 #")) "
0 0 19 3 3 #"\",\""
0 0 24 3 3 #")) "
0 0 19 3 10 #"\"):\\n    \""
0 0 24 3 1 #" "
0 0 14 3 11 #"method-body"
0 0 24 3 3 #")) "
0 0 17 3 16 #";;missing return"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 39 #";(displayln \"define method-definition\")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 8 #"get-text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 61
#";;;TODO implement for python and other languages with returns"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 10 #"wide-scope"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 20 #";(displayln \"begin\")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 28 #";(displayln \"before delete\")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 28 #";(displayln \"before insert\")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 18 #"create-call-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 26 #";(displayln \"before move\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 49 #";In order to put the new changes in the clipboard"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 63
#";write the text in the last position of the file, then \"cut\" it"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"python?"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-method-python"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 13 #"create-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"cut"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 4 #"))) "
0 0 17 3 37 #"; time stamp might fail really hard.)"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 38 #"fw:keymap:call/text-keymap-initializer"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 18 #"message-box/custom"
0 0 24 3 1 #" "
0 0 17 3 24 #";;;Its buggy... fix this"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"Title Extract-Function End\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 49 #"\"The Extracted Function is now on your Clipboard\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"Ok\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 25 #";(string-constant cancel)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 17 3 64
#";#f means that we are not using this button, maximum is 3 button"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 7 #"caution"
0 0 24 3 1 #" "
0 0 15 3 9 #"default=1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 6 #"values"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 18 #"create-call-method"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\n\""
0 0 24 3 3 #") ("
0 0 14 3 13 #"create-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 7 #")))))) "
0 0 17 3 39 #";;if wide-scope return the call method!"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 31 #";;;;; end refactoring functions"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-syntax-value"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-position"
0 0 24 3 1 #" "
0 0 23 3 11 #"#:expanded?"
0 0 24 3 2 #" ["
0 0 14 3 9 #"expanded?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"get-start-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-end-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 61
#";;find-line uses location, not position. must convert before!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 7 #";Trying"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 14 #"start-position"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-line-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"code-walker"
0 0 24 3 1 #" "
0 0 14 3 16 #"expanded-program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"printPython"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 12 #"interactions"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 3 1 #" "
0 0 23 3 22 #"#:print-expanded-form?"
0 0 24 3 2 #" ["
0 0 14 3 14 #"expanded-form?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"get-start-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-end-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 61
#";;find-line uses location, not position. must convert before!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 7 #";Trying"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"position-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-line-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 14 #"expanded-form?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 28 #"drracket:eval:expand-program"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")) "
0 0 17 3 7 #";;Input"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#f"
0 0 17 3 23 #";(not module-language?)"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 16 #"kill-termination"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 8 #"; =user="
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"current-annotations"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 19 #"expansion-completed"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"cleanup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 16 #"module-language?"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 35 #"eval-compile-time-part-of-top-level"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"update-status-line"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 1 #" "
0 0 14 3 23 #"status-coloring-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"current-annotations"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 22 #"print-languages-syntax"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 19 #"expanded-expression"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 17 #"close-status-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 7 #")])))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 16 #"kill-termination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 22 #"print-languages-syntax"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 29 1 #"\n"
0 0 24 3 47 #"                                               "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#t"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 12 #"interactions"
0 0 24 3 1 #" "
0 0 14 3 12 #"refactoring?"
0 0 24 3 1 #" "
0 0 23 3 19 #"#:print-extra-info?"
0 0 24 3 2 #" ["
0 0 14 3 17 #"print-extra-info?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 23 3 18 #"#:auto-refactoring"
0 0 24 3 2 #" ["
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 2 #" ["
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 23 3 24 #"#:get-refactoring-string"
0 0 24 3 2 #" ["
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"] "
0 0 23 3 20 #"#:check-refactorings"
0 0 24 3 2 #" ["
0 0 14 3 19 #"check-refactorings?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 23 3 13 #"#:call-method"
0 0 24 3 2 #" ["
0 0 14 3 11 #"call-method"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"] "
0 0 23 3 13 #"#:body-method"
0 0 24 3 1 #"["
0 0 14 3 11 #"body-method"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"] "
0 0 23 3 8 #"#:parent"
0 0 24 3 2 #" ["
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"dump-arrow-records"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"end arrow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"interactions-text"
0 0 24 3 1 #" "
0 0 14 3 12 #"interactions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 37 #";;;;;;;;;;;;;;;;;; Editor information"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"get-start-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 16 #"get-end-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 61
#";;find-line uses location, not position. must convert before!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 17 3 12 #";Check this!"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"position-location"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 7 #";Trying"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"position-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 9 #"start-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 7 #"end-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-line-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 9 #"find-line"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-box"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-line-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 18 #";;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"check-similar"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"check-similar\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"search-similiar"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 10 #"randombool"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 19 #"check-refactorings?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"search-similar\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"compare-syntax"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 45 #";;; add a boolean that compares values or not"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 79
(
 #";;; end cases, a #f or userStacl and autoStack both reach null at th"
 #"e same time"
) 0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"compare-syntax\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"It's null\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 17 3 2 #"#;"
0 0 24 3 2 #"[("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                   [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 5 #"stop?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"evaluation stopped\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"identifier!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 11 #"identifier?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 17 #"free-identifier=?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 17 3 12 #";;check this"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 17 3 31 #";;not sure if any stack is null"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"FREE-IDENTIFIER\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 18 #"identifier-binding"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 18 #"identifier-binding"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                         [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                         [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                         [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                         [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 50 #"\"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 50 #"\"this should not happen!!!!!!!!!!!!!!!!!!!!!!!!!!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"It's pair\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #") "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #")) "
0 0 17 3 14 #";;add to stack"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #") "
0 0 14 3 9 #"autoStack"
0 0 24 3 3 #")) "
0 0 17 3 14 #";;add to stack"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"In Syntax\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 3 #") ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"else\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"equal?\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                     [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 3 #") ("
0 0 14 3 7 #"syntax?"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 50 #"\"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 50 #"\"this should not happen!!!!!!!!!!!!!!!!!!!!!!!!!!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"userStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"autoStack"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 2 #"#f"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"compare-aux"
0 0 24 3 1 #" "
0 0 14 3 12 #"userSelected"
0 0 24 3 1 #" "
0 0 14 3 12 #"autoSelected"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 54 #";;;from the selected argument try and extract a \"form\""
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 24 #";;;get-selected argument"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"before code-walker\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-walker"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"after code-walker\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"highlight-selected"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"replace-expressions"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 40 #";;receive function call already computed"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 34 #";; remove syntax-span stx-hihlight"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 48 #";; (- (syntax-position stx-highlight) 1)  intial"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 71
(
 #";; (+ (syntax-span stx-highlight) (syntax-position stx-highlight)) l"
 #"ast"
) 0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 85
(
 #";; insert -> start from the end to the beginning (Hopefully is how i"
 #"t is implemented)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 20 #";(displayln \"begin\")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 4 #"memq"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 28 #";(displayln \"before delete\")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"syntax-span"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 3 #") ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 28 #";(displayln \"before insert\")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 11 #"call-method"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 26 #";(displayln \"before move\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 49 #";In order to put the new changes in the clipboard"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 63
#";write the text in the last position of the file, then \"cut\" it"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 7 #"python?"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-method-python"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 13 #"create-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"method-definition"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-str"
0 0 24 3 2 #") "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"cut"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 4 #"))) "
0 0 17 3 37 #"; time stamp might fail really hard.)"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 38 #"fw:keymap:call/text-keymap-initializer"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 18 #"message-box/custom"
0 0 24 3 1 #" "
0 0 17 3 24 #";;;Its buggy... fix this"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"Title Extract-Function End\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 49 #"\"The Extracted Function is now on your Clipboard\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"Ok\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 25 #";(string-constant cancel)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 17 3 64
#";#f means that we are not using this button, maximum is 3 button"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 7 #"caution"
0 0 24 3 1 #" "
0 0 15 3 9 #"default=1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"before traverse\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"highlight-selected-aux"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"wideScopeDetected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 22 #"unhighlight-ranges/key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (("
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"painting!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 13 #"stx-highlight"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #" ("
0 0 14 3 11 #"syntax-line"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 11 #"call-method"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"syntax-span"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 3 #") ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 19 #"replace-expressions"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 14 3 11 #"body-method"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 17 3 80
(
 #";(send text insert (create-method method-definition new-str) last-po"
 #"s last-pos))"
) 0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 3 #"cut"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 8 #"last-pos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 4 #"))) "
0 0 17 3 37 #"; time stamp might fail really hard.)"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 3 #"txt"
0 0 24 3 2 #" ("
0 0 14 3 7 #"in-list"
0 0 24 3 1 #" "
0 0 14 3 18 #"edit-sequence-txts"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"txt"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 38 #"fw:keymap:call/text-keymap-initializer"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 18 #"message-box/custom"
0 0 24 3 1 #" "
0 0 17 3 24 #";;;Its buggy... fix this"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 28 #"\"Title Extract-Function End\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 49 #"\"The Extracted Function is now on your Clipboard\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 33 #"fw:gui-utils:format-literal-label"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"Ok\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 25 #";(string-constant cancel)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 17 3 64
#";#f means that we are not using this button, maximum is 3 button"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 14 3 6 #"parent"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 7 #"caution"
0 0 24 3 1 #" "
0 0 15 3 9 #"default=1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 23 3 14 #"#:dialog-mixin"
0 0 24 3 1 #" "
0 0 14 3 23 #"frame:focus-table-mixin"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  )"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 19 #"replace-expressions"
0 0 24 3 1 #" "
0 0 14 3 13 #"stx-highlight"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"loop"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 2 #") "
0 0 14 3 4 #"sexp"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"else painting\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 22 #"highlight-selected-aux"
0 0 24 3 1 #" "
0 0 14 3 8 #"aux-sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"to-highlight-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"search-refactorings"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"search-refactorings!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-walker"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 35 #";;; aux is the form to compare with"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 40 #";;; selected-expression is the form have"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"compare syntax\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 14 #"compare-syntax"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 20 #";;; there is a match"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"match found!!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 48 #";;;; (get list of positions, put that on a list)"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 65
#";;;;; in the end call specialized function, paint all of the list"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 2 #"  "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                 ("
0 0 14 3 3 #"car"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 2 #" ("
0 0 14 3 8 #"syntax-e"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 10 #"))))))))))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 17 #"to-highlight-list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #" "
0 0 14 3 17 #"to-highlight-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 20 #"selected-expressions"
0 0 24 3 4 #")) ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.25"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"unhighlight-range"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 2 #" ["
0 0 14 3 11 #"caret-space"
0 0 24 3 1 #" "
0 0 14 3 5 #"style"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 41 #";;;;; highlight/display (end start color)"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"loop\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Over\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 60
#";;;call the function to highlight all the necessary areas :D"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 17 #"to-highlight-list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 18 #"highlight-selected"
0 0 24 3 1 #" "
0 0 14 3 17 #"to-highlight-list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"last one\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 19 #"search-refactorings"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"before call\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 19 #"search-refactorings"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"search-similar-aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 28 #"drracket:eval:expand-program"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")) "
0 0 17 3 7 #";;Input"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#f"
0 0 17 3 23 #";(not module-language?)"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 16 #"kill-termination"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 8 #"; =user="
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"current-annotations"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 19 #"expansion-completed"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 7 #"cleanup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 16 #"module-language?"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 35 #"eval-compile-time-part-of-top-level"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"update-status-line"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 1 #" "
0 0 14 3 23 #"status-coloring-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 61
#"\"?????????????????????? expanding program ??????????????????\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 15 #"search-similiar"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 19 #"check-refactorings?"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 8 #")]))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"search-similar-aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 16 #"kill-termination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 15 #"search-similiar"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 19 #"check-refactorings?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 20 #"not-expanded-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 18 #"search-similar-aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"automated-refactoring"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 23 3 15 #"#:text-location"
0 0 24 3 2 #" ["
0 0 14 3 13 #"text-location"
0 0 24 3 2 #" ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 116
(
 #"                                                                    "
 #"                                                "
) 0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 117
(
 #"                                                                    "
 #"                                                ("
) 0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 16 #"kill-termination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 13 #"text-location"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #">="
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 21 #"automated-refactoring"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 21 #"automated-refactoring"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 19 #"check-refactorings?"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 13 #"check-similar"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 19 #"check-refactorings?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 12 #"refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 28 #"drracket:eval:expand-program"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 3 #")) "
0 0 17 3 7 #";;Input"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#f"
0 0 17 3 23 #";(not module-language?)"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 14 3 16 #"kill-termination"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 8 #"; =user="
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 19 #"normal-termination?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"current-annotations"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 19 #"expansion-completed"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 7 #"cleanup"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 16 #"module-language?"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 35 #"eval-compile-time-part-of-top-level"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 18 #"current-eventspace"
0 0 24 3 1 #" "
0 0 14 3 14 #"drs-eventspace"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 14 #"queue-callback"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 2 #"\316\273"
0 0 24 3 4 #" () "
0 0 17 3 7 #"; =drs="
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 23 #"with-lock/edit-sequence"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 15 3 16 #"definitions-text"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"update-status-line"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 1 #" "
0 0 14 3 23 #"status-coloring-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (["
0 0 14 3 19 #"current-annotations"
0 0 24 3 1 #" "
0 0 15 3 16 #"definitions-text"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                     "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 2 #" ("
0 0 14 3 11 #"get-editor%"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 19 #"expanded-expression"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 17 #"close-status-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 28 #"drracket:check-syntax:status"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"loop"
0 0 24 3 7 #")])))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 16 #"kill-termination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 53 #"                                                     "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                     ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                        [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 15 3 19 #"begin-edit-sequence"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 17 #"end-edit-sequence"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"result"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"empty\""
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"tID"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                 (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 8 #"settings"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 9 #"init-proc"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 16 #"kill-termination"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                   "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 52 #"                                                   ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 14 3 14 #"user-custodian"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"#####################\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"#####################\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 6 #"result"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 6 #"result"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"refactoring-menu"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 5 #"menu%"
0 0 24 3 2 #" ["
0 0 14 3 5 #"label"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"Refactoring Menu\""
0 0 24 3 3 #"] ["
0 0 14 3 6 #"parent"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 9 #"get-frame"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-menu-bar"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 34 #"append-editor-operation-menu-items"
0 0 24 3 1 #" "
0 0 14 3 16 #"refactoring-menu"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 6 #"detect"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 10 #"menu-item%"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 25 #";(get-refactoring-string)"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 21 #"\"Detect Refactorings\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 16 #"refactoring-menu"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 28 #";;;;; Wide-Scope-Replacement"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 16 #"checkRefactoring"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 10 #"menu-item%"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 25 #";(get-refactoring-string)"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 19 #"\"Check Refactoring\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 16 #"refactoring-menu"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 17 #"wideScopeDetected"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"wide Scope calling\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 22 #"wide-scope-replacement"
0 0 24 3 1 #" "
0 0 14 3 21 #"make-identifiers-hash"
0 0 24 3 1 #" "
0 0 14 3 19 #"binding-identifiers"
0 0 24 3 1 #" "
0 0 14 3 6 #"parent"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 11 #"binding-aux"
0 0 24 3 1 #" "
0 0 23 3 9 #"#:python?"
0 0 24 3 2 #" ["
0 0 14 3 7 #"python?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 20 #"#:check-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 9 #"wideScope"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 10 #"menu-item%"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 25 #";(get-refactoring-string)"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 16 #"\"Do Refactoring\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 16 #"refactoring-menu"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 17 #"wideScopeDetected"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 20 #"#:check-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 9 #"wideScope"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 10 #"menu-item%"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 25 #";(get-refactoring-string)"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 20 #"\"Clear Refactorings\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 16 #"refactoring-menu"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 21 #"#:detect-refactorings"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 20 #"AutomaticRefactoring"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 10 #"menu-item%"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 25 #";(get-refactoring-string)"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 23 #"\"Automatic Refactoring\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 16 #"refactoring-menu"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 3 #"evt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 18 #"refactoring-syntax"
0 0 24 3 2 #" ("
0 0 14 3 15 #"get-current-tab"
0 0 24 3 3 #") ("
0 0 14 3 21 #"get-interactions-text"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 23 3 18 #"#:auto-refactoring"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 20 #"AutomaticRefactoring"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 8        4257 4 2 #"(\0"
2 #")\0"
850 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 1 #"d"
7 #"wxtext\0"
3 1 #"e"
7 #"wxtext\0"
3 4 #"fine"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 23 #"create-refactoring-menu"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"bool"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"need-a-sep?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"not"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"add-sep"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 6 #"unless"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"need-a-sep?"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"need-a-sep?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 4 #"when"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"need-a-sep?"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 3 #"new"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"separator-menu-item%"
7 #"wxtext\0"
3 2 #" ["
7 #"wxtext\0"
3 6 #"parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 5 #"]))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"menu%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 24 #"\"Refactoring Operations\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"RefactoringOperations"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 24 #"\"Refactoring operations\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 18 #"refactoring-syntax"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"get-current-tab"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"printPythonmenu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 25 #"\"Print non expanded form\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 11 #"printPython"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"get-current-tab"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 7 #"add-sep"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 21 #"\"Print expanded form\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 11 #"printPython"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"get-current-tab"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 22 #"#:print-expanded-form?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 17 #";;;;aux functions"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 20 #"get-definitions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 18 #"get-start-position"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 20 #"get-definitions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 16 #"get-end-position"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 13 #"define-values"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"make-identifiers-hash"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 35 #"position->matching-identifiers-hash"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 71
(
 #";I have access to the binding-identifiers and the make-identifiers-h"
 #"ash"
) 7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 13 #"define-values"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"make-identifiers-aux"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 41 #";the binding idenfitiers of the selection"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 35 #"position->matching-identifiers-hash"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"compute-imports"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 12 #";No imports?"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 17 #"remove-duplicates"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"="
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"#:key"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 22 #"var-arrow-end-pos-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 22 #";(display binding-aux)"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 20 #";(displayln \"teste\")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 6 #"return"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 2 #"])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 3 #"for"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 7 #"in-list"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 4 #")]) "
7 #"wxtext\0"
3 44 #";check if the arrow is \"import\" or \"require\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 4 #"name"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"get-text"
7 #"wxtext\0"
3 3 #"  ("
7 #"wxtext\0"
3 22 #"var-arrow-end-pos-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 23 #"var-arrow-end-pos-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 4 #"))])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 4 #"when"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #">="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 22 #"var-arrow-end-pos-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 41 #"                                        ("
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 23 #"var-arrow-end-pos-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   ("
7 #"wxtext\0"
3 3 #"and"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 2 #">="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 24 #"var-arrow-start-pos-left"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 41 #"                                        ("
7 #"wxtext\0"
3 2 #"<="
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 25 #"var-arrow-start-pos-right"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"var-arrow"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 32 #"                               ("
7 #"wxtext\0"
3 2 #"or"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"name"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"import\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"name"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"\"require\""
7 #"wxtext\0"
3 4 #" )))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 24 #"                        "
7 #"wxtext\0"
3 17 #";(displayln name)"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 25 #"                        ("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"return"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 4 #"))  "
7 #"wxtext\0"
3 20 #"; check if add args."
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 26 #"                      ))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 19 #";(displayln return)"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 6 #"return"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 4 #";;;;"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"unless"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"name-to-offer"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 18 #"find-name-to-offer"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 3 #"new"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ["
7 #"wxtext\0"
3 6 #"parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 1 #"]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ["
7 #"wxtext\0"
3 5 #"label"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 33 #"fw:gui-utils:format-literal-label"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"string-constant"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"cs-rename-var"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 59 #"                                                           "
7 #"wxtext\0"
3 13 #"name-to-offer"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                 ["
7 #"wxtext\0"
3 8 #"callback"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"x"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"y"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"find-menu-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 20 #"rename-menu-callback"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"make-identifiers-hash"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 44 #"                                            "
7 #"wxtext\0"
3 13 #"name-to-offer"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 44 #"                                            "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 44 #"                                            "
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 8 #" ))))]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 7 #"add-sep"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 28 #";;;;; Wide-Scope-Replacement"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"unless"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 4 #"set!"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 16 #"checkRefactoring"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                    "
7 #"wxtext\0"
3 25 #";(get-refactoring-string)"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                    "
7 #"wxtext\0"
3 19 #"\"Check Refactoring\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                    "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 21 #"                    ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 17 #"wideScopeDetected"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 29 #"                            ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"\"wide Scope calling\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 29 #"                            ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"find-menu-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 31 #"                              ("
7 #"wxtext\0"
3 22 #"wide-scope-replacement"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"make-identifiers-hash"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 54 #"                                                      "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ("
7 #"wxtext\0"
3 18 #"refactoring-syntax"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"get-current-tab"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"#:detect-refactorings"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"#:check-refactorings"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 6 #"))))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 22 #";;;;; Extract Function"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 6 #"unless"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 24 #";binding-aux check this!"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 64 #";(define name-to-offer (find-name-to-offer binding-identifiers))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 12 #"            "
7 #"wxtext\0"
3 17 #";;;;aux functions"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"get-text"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 18 #"\"Extract Function\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 5 #";menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 16 #"refactoring-menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"find-menu-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 30 #"; (what-is? menu) is an editor"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 16 #"extract-function"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"make-identifiers-hash"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                    "
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 5 #")))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 30 #";;;;;; Python Extract Function"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 11 #"make-object"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"menu-item%"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 18 #"\"Extract Function\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 14 #"              "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 15 #"              ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"item"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"evt"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"find-menu-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"menu"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 18 #"                  "
7 #"wxtext\0"
3 30 #"; (what-is? menu) is an editor"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 16 #"extract-function"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"make-identifiers-hash"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"binding-identifiers"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                    "
7 #"wxtext\0"
3 12 #"frame-parent"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 15 #"start-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"end-selection"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"binding-aux"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"#:python?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 34 #"\"$$$$$$$$$$$$$$$$$$$$$$$$$$ LABEL\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"RefactoringOperations"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 9 #"get-label"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 18 #"refactoring-syntax"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 15 #"get-current-tab"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 21 #"get-interactions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 24 #"#:get-refactoring-string"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"@@@@@@\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"end\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 4 #"void"
7 #"wxtext\0"
3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 38 #"keymap:add-to-right-button-menu/before"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 38 #"keymap:add-to-right-button-menu/before"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-pos/text"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 23 #"create-refactoring-menu"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 38 #"keymap:add-to-right-button-menu/before"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 38 #"keymap:add-to-right-button-menu/before"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 15 3 13 #"define-values"
0 0 24 3 2 #" ("
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 3 #") ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-definitions-text"
0 0 24 3 2 #") "
0 0 14 3 12 #"get-pos/text"
0 0 24 3 1 #" "
0 0 14 3 5 #"event"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 23 #"create-refactoring-menu"
0 0 24 3 1 #" "
0 0 14 3 4 #"menu"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 3 #"pos"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 8        2597 4 2 #"(\0"
2 #")\0"
518 7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"auto-tests"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 11 #"message-box"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 8 #"\"test 1\""
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 21 #"\"Running tests here?\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 17 #"current-directory"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 69
(
 #"\"/home/rafaelreia/share/racket/collects/RefactoringTool/AutoTesting"
 #"/\""
) 7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 10 #"          "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"find-files"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #")("
7 #"wxtext\0"
3 14 #"string-suffix?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"path->string"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".rkt\""
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 11 #"          ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 3 #" (["
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 10 #"find-files"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"lambda"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #")("
7 #"wxtext\0"
3 14 #"string-suffix?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"path->string"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"a"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 3 #")])"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 13 #"            ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 5 #"null?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 5 #"\"end\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 17 #"                ("
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 20 #"                  (("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 3 #" ()"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                     (("
7 #"wxtext\0"
3 39 #"drracket:eval:traverse-program/multiple"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                       "
7 #"wxtext\0"
3 14 #"#:gui-modules?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                       "
7 #"wxtext\0"
3 8 #"settings"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                       "
7 #"wxtext\0"
3 9 #"init-proc"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                       "
7 #"wxtext\0"
3 16 #"kill-termination"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 22 #"                      "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 31 #"drracket:language:make-text/pos"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 57 #"                                                         "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 58 #"                                                         ("
7 #"wxtext\0"
3 4 #"send"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"text"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"last-position"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 15 #"open-input-file"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 23 #"                      ("
7 #"wxtext\0"
3 2 #"\316\273"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 19 #";this is the \"iter\""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 25 #"                        ("
7 #"wxtext\0"
3 4 #"cond"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 28 #"                          [("
7 #"wxtext\0"
3 11 #"eof-object?"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 28 #"                           ("
7 #"wxtext\0"
3 22 #"custodian-shutdown-all"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 14 #"user-custodian"
7 #"wxtext\0"
3 2 #")]"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                          ["
7 #"wxtext\0"
3 4 #"else"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 28 #"                           ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                           "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 24 #"syntax-tests-refactoring"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 10 #"start-line"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                           "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 18 #"syntax-refactoring"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 20 #"get-definitions-text"
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"20"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"20"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 28 #"                           ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 4 #"arg2"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 19 #"code-walker-special"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"0"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"20"
7 #"wxtext\0"
3 3 #") ("
7 #"wxtext\0"
3 1 #"+"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"1"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 2 #"20"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 30 #"                             ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 19 #"\"Inside auto-tests\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 30 #"                             ("
7 #"wxtext\0"
3 6 #"define"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"result"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"racket-parser"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"arg2"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 30 #"                             ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"result"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 30 #"                             ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"syntax->datum"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"result"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 29 #"                             "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"file->string"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 80
(
 #"\"/home/rafaelreia/share/racket/collects/RefactoringTool/AutoTesting"
 #"/testnot.out\""
) 7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 29 #"                             "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"file->string"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"string-trim"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".out\""
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 29 #"                             "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"\"before IF\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 30 #"                             ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 12 #"file-exists?"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"string-trim"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".out\""
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 34 #"                                 ("
7 #"wxtext\0"
3 2 #"if"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 8 #"string=?"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"syntax->datum"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"result"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 39 #"                                      ("
7 #"wxtext\0"
3 12 #"file->string"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"string-trim"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".out\""
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 38 #"                                     ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 13 #"\"ITS TRUEEEE\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 38 #"                                     ("
7 #"wxtext\0"
3 5 #"begin"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 40 #"                                       ("
7 #"wxtext\0"
3 11 #"message-box"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 33 #"\"Racket - Refactoring Tool Error\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 17 #"\"Error in test: \""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 20 #"\" is not equal to: \""
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 102
(
 #"                                                                    "
 #"                                 ("
) 7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"string-trim"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".out\""
7 #"wxtext\0"
3 3 #") )"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 52 #"                                                    "
7 #"wxtext\0"
3 2 #"#f"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 1 #"'"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 2 #"ok"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"stop"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 40 #"                                       ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 11 #"\"ITS FALSE\""
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 34 #"                                 ("
7 #"wxtext\0"
3 3 #"let"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 3 #"out"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 16 #"open-output-file"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"string-append"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 11 #"string-trim"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"car"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 5 #"\".in\""
7 #"wxtext\0"
3 2 #") "
7 #"wxtext\0"
3 6 #"\".out\""
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 40 #"\"file do not exists, creating a new one\""
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   ("
7 #"wxtext\0"
3 5 #"write"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 6 #"format"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"\"~a\""
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 13 #"syntax->datum"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 6 #"result"
7 #"wxtext\0"
3 3 #")) "
7 #"wxtext\0"
3 3 #"out"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 36 #"                                   ("
7 #"wxtext\0"
3 17 #"close-output-port"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"out"
7 #"wxtext\0"
3 4 #"))))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                           "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 12 #"parameterize"
7 #"wxtext\0"
3 3 #" (("
7 #"wxtext\0"
3 18 #"print-syntax-width"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"9000"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 32 #"                               ("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 4 #"sexp"
7 #"wxtext\0"
3 2 #"))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 27 #"                           "
7 #"wxtext\0"
3 2 #"#;"
7 #"wxtext\0"
3 1 #"("
7 #"wxtext\0"
3 9 #"displayln"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 20 #"non-expanded-program"
7 #"wxtext\0"
3 1 #")"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 28 #"                           ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 4 #")]))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 22 #"                      "
7 #"wxtext\0"
3 2 #"#t"
7 #"wxtext\0"
3 3 #")))"
7 #"wxtext\0"
29 1 #"\n"
7 #"wxtext\0"
3 19 #"                  ("
7 #"wxtext\0"
3 4 #"loop"
7 #"wxtext\0"
3 2 #" ("
7 #"wxtext\0"
3 3 #"cdr"
7 #"wxtext\0"
3 1 #" "
7 #"wxtext\0"
3 3 #"aux"
7 #"wxtext\0"
3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 10 #"auto-tests"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 60
#";;;;Menus definitions (lack a better idea on how to do this)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"detect"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"AutomaticRefactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"printPythonmenu"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"checkRefactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"wideScopeDetected"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"wideScope"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pretty-format-improved"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"walk-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"not-implemented!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"read"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #") ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 13 #"pretty-format"
0 0 24 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 5 #"))) ("
0 0 14 3 13 #"pretty-format"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #") ("
0 0 14 3 9 #"walk-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"pretty-format"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"syntax->datum-improved"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"walk-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 18 #"\"not-implemented!\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"read"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 2 #",@"
0 0 24 3 1 #"("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #") ("
0 0 14 3 9 #"walk-list"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"print-languages-syntax"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"print-languages\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-walker"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"syntax-tests-refactoring"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"search-refactoring"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"syntax-refactoring"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 26 #"\"syntax-refactoring tests\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"null"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"write-back"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 93
(
 #";(- (syntax-position aux) 1) (+ 3 (string-length (syntax->string aux"
 #")) (syntax-position aux))"
) 0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 19 #"print-as-expression"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 20 #"pretty-print-columns"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pretty-format-improved"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pretty-format-improved"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 19 #"print-as-expression"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 20 #"pretty-print-columns"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pretty-format-improved"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 2 #") "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 22 #"pretty-format-improved"
0 0 24 3 1 #" "
0 0 14 3 7 #"aux-stx"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"write-simple"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #") "
0 0 17 3 14 #";;Geral output"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"delete"
0 0 24 3 1 #" "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #" "
0 0 14 3 13 #"end-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 6 #"insert"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 3 #")) "
0 0 14 3 15 #"start-selection"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"search-refactorings-highlight"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #"(( "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"racket-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"SYNTAX FOUND\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 18 #"print-syntax-width"
0 0 24 3 1 #" "
0 0 21 3 4 #"9000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 12 #"write-python"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 12 #"write-python"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 6 #")))) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 16 #"write-processing"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 2 #" ("
0 0 14 3 16 #"write-processing"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 6 #")))) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"in unless\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"regexp-match"
0 0 24 3 1 #" "
0 0 19 3 9 #"#rx\"(\\n)\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 73
(
 #"                                                                    "
 #"    ("
) 0 0 14 3 6 #"length"
0 0 24 3 1 #"("
0 0 14 3 12 #"regexp-match"
0 0 24 3 1 #" "
0 0 19 3 9 #"#rx\"(\\n)\""
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 15 #"highlight-range"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"syntax->string"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"syntax-position"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 4 #")) ("
0 0 15 3 11 #"make-object"
0 0 24 3 1 #" "
0 0 14 3 6 #"color%"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"255"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.35"
0 0 24 3 2 #") "
0 0 23 3 5 #"#:key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"loop\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"search-refactorings"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"trim-string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"label-string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 3 #"str"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 3 #"str"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"None Available\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #"(( "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"racket-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 13 #"meta-lang-stx"
0 0 24 3 2 #" ("
0 0 14 3 16 #"create-meta-lang"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 9 #"test-lang"
0 0 24 3 2 #" ("
0 0 14 3 16 #"meta-lang-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"RACKET: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"racket-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Python: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"meta-refactoring \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 9 #"test-lang"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"unless"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 12 #"parameterize"
0 0 24 3 3 #" (("
0 0 14 3 19 #"print-as-expression"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 20 #"pretty-print-columns"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 2 #" ("
0 0 14 3 12 #"trim-string?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 10 #"racket-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 2 #" ("
0 0 14 3 12 #"trim-string?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"pretty-format"
0 0 24 3 2 #" ("
0 0 14 3 22 #"syntax->datum-improved"
0 0 24 3 1 #" "
0 0 14 3 10 #"racket-stx"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 2 #" ("
0 0 14 3 12 #"trim-string?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"~.a\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 14 3 14 #"processing-stx"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"None Available\""
0 0 24 3 7 #")])))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"get-label"
0 0 24 3 2 #") "
0 0 19 3 16 #"\"None Available\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 22 #"get-refactoring-string"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 19 #"search-refactorings"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 20 #"detect-refactorings?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"expanded?"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 12 #"syntax-parse"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-walker"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")) "
0 0 17 3 44 #";used for the exapanded program Regarding if"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 23 3 10 #"#:literals"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    [("
0 0 14 3 16 #"call-with-values"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 5 #" () ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"test-expr"
0 0 24 3 1 #" "
0 0 14 3 9 #"then-expr"
0 0 24 3 1 #" "
0 0 14 3 9 #"else-expr"
0 0 24 3 3 #")) "
0 0 14 3 12 #"print-values"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 11 #"eval-syntax"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"then-expr"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"eval-syntax"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 9 #"else-expr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 10 #"write-back"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 24 3 1 #"("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 9 #"test-expr"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 32 #";;do the refactoring operations:"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #"(( "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"racket-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #" ("
0 0 14 3 13 #"python-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #" ("
0 0 14 3 17 #"processing-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"arg2"
0 0 24 3 2 #" ("
0 0 14 3 19 #"code-walker-special"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 10 #"auto-tests"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 4 #"arg2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"special\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"auto-tests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 10 #"racket-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"RACKET: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"racket-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 10 #"write-back"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 3 #"arg"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"Python: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 12 #"write-simple"
0 0 24 3 1 #" "
0 0 14 3 10 #"python-stx"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                      [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"void?"
0 0 24 3 1 #" "
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"Processing: \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 14 #"processing-stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 12 #"write-simple"
0 0 24 3 1 #" "
0 0 14 3 14 #"processing-stx"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 21 #"RefactoringOperations"
0 0 24 3 1 #" "
0 0 14 3 9 #"set-label"
0 0 24 3 1 #" "
0 0 19 3 16 #"\"None Available\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 24 #"code-walker-non-expanded"
0 0 24 3 1 #" "
0 0 14 3 7 #"program"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 8 #"end-line"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"arg\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"racket-parser\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 10 #"write-back"
0 0 24 3 2 #" ("
0 0 14 3 13 #"racket-parser"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 14 3 3 #"arg"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 17 #"auto-refactoring?"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"detect"
0 0 24 3 1 #" "
0 0 14 3 11 #"is-enabled?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"detect"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 15 3 3 #"let"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 3 #" (["
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 10 #"start-line"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ["
0 0 14 3 3 #"end"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-line"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 2 #" ("
0 0 14 3 29 #"search-refactorings-highlight"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Over\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #" "
0 0 14 3 3 #"aux"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"detect"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 5 #"clear"
0 0 24 3 1 #" "
0 0 14 3 6 #"enable"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 14 3 22 #"unhighlight-ranges/key"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"key"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"next-trace-refresh?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 23 #"get-next-trace-refresh?"
0 0 24 3 2 #") "
0 0 14 3 19 #"next-trace-refresh?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"set-next-trace-refresh"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 19 #"next-trace-refresh?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"set-replay-state"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-replay-state"
0 0 24 3 2 #") "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 59
#"drracket:module-language-tools:add-online-expansion-monitor"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 15 #"online-comp.rkt"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 7 #"monitor"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"on monitor\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 37 #"drracket:module-language-tools:start?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #") ("
0 0 14 3 22 #"set-next-trace-refresh"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 36 #"drracket:module-language-tools:done?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 17 #";; replay-state ="
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 50 #";;  (or/c #f                  -- no replay running"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 57 #";;        (box #t             -- keep running this replay"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 38 #";;             (listof (listof stuff))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 87
(
 #";;                            -- pick up some new elements to add to"
 #" the current replay"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 85
(
 #";;             #f))           -- doesn't actually get set on a tab, "
 #"but this means to"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 61
#";;                               just stop running the replay"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"else in cond\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 23 #"get-next-trace-refresh?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"old-replay-state"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-replay-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"box?"
0 0 24 3 1 #" "
0 0 14 3 16 #"old-replay-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 16 #"old-replay-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 16 #"set-replay-state"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 22 #"set-next-trace-refresh"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 46 #";; reset any previous check syntax information"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 28 #"syncheck:clear-error-message"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 27 #"syncheck:clear-highlighting"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 22 #"syncheck:reset-docs-im"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 21 #"add-bkg-running-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"syncheck"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"orchid\""
0 0 24 3 1 #" "
0 0 14 3 19 #"cs-syncheck-running"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 9 #"get-frame"
0 0 24 3 2 #") "
0 0 14 3 20 #"syncheck:init-arrows"
0 0 24 3 3 #")) "
0 0 17 3 12 #";;check this"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"drr-frame"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 7 #"get-tab"
0 0 24 3 2 #") "
0 0 14 3 9 #"get-frame"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"string?"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #") "
0 0 17 3 29 #";; an internal error happened"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"in val\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 24 #"remove-bkg-running-color"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"syncheck"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"tab"
0 0 24 3 1 #" "
0 0 14 3 26 #"show-online-internal-error"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"else in cond in else\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 4 #"read"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 41 #";;Add information to use with the arrows:"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 43 #";;non-expanded-program and expanded-program"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             (("
0 0 15 3 2 #"\316\273"
0 0 24 3 3 #" ()"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                (("
0 0 14 3 39 #"drracket:eval:traverse-program/multiple"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 23 3 14 #"#:gui-modules?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 17 #"get-next-settings"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 4 #"void"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 31 #"drracket:language:make-text/pos"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 29 1 #"\n"
0 0 24 3 50 #"                                                  "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 51 #"                                                  ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 15 3 9 #"defs-text"
0 0 24 3 1 #" "
0 0 14 3 13 #"last-position"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sexp"
0 0 24 3 1 #" "
0 0 14 3 4 #"loop"
0 0 24 3 2 #") "
0 0 17 3 19 #";this is the \"iter\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                     [("
0 0 14 3 11 #"eof-object?"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 22 #"custodian-shutdown-all"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 20 #"non-expanded-program"
0 0 24 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"loop"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 15 #";;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 2 #" ("
0 0 14 3 16 #"get-replay-state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 3 #"not"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"new-replay-state"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 4 #"()))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 16 #"set-replay-state"
0 0 24 3 1 #" "
0 0 14 3 16 #"new-replay-state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 34 #"\"before replay-compile-comp-trace\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 9 #"drr-frame"
0 0 24 3 1 #" "
0 0 14 3 29 #"replay-compile-comp-trace-aux"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 15 3 9 #"defs-text"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 3 #"val"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 6 #"()))] "
0 0 17 3 47 #";; should this box be new-replay-state instead?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 20 #"current-replay-state"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 11 #")))])])])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 59
#"drracket:module-language-tools:add-online-expansion-handler"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 15 #"online-comp.rkt"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 1 #"'"
0 0 14 3 2 #"go"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"void"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"phase1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"phase2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 37 #"drracket:get/extend:extend-unit-frame"
0 0 24 3 1 #" "
0 0 14 3 22 #"refactoring-tool-mixin"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 19 #"define-runtime-path"
0 0 24 3 1 #" "
0 0 14 3 15 #"online-comp.rkt"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"online-comp.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"cs-syncheck-running"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Check Syntax Running\""
0 0 24 3 2 #") "
0 0 17 3 12 #";;before 6.3"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"cs-syncheck-running"
0 0 24 3 2 #" ("
0 0 14 3 15 #"string-constant"
0 0 24 3 1 #" "
0 0 14 3 19 #"cs-syncheck-running"
0 0 24 3 3 #")) "
0 0 17 3 10 #";;;for 6.3"
0 0 24 29 1 #"\n"
0           0
